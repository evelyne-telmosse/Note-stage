---
title: "MetaCHOexo"
author: "Evelyne Telmosse"
date: "14/09/2020"
output: html_document
---

### Téléchargement packages/librairies
```{r}
install.packages('caret')
install.packages('car')
install.packages("broom")
install.packages("tidymodels")
install.packages("leaps")
install.packages("MASS")

install.packages("styler")

```

```{r}
pacman::p_load(googlesheets,gsheet,csv,tidyverse,here,RColorBrewer,cowplot,ggrepel,ggpubr,corrplot,caTools,caret, car, broom, ggplot2, dplyr, rsample, parsnip, recipes, yardstick, ranger, skimr,leaps, styler, earth, vip, pls, relaimpo, hier.part, usdm)
```

### Lire csv 

```{r}
choexo_clean <- read.csv("choexo_clean.csv")
```

### Relation entre les données CHOexo

```{r}
choexo_new %>%
  select_if(.,is.numeric) %>%
  cor(use = "pairwise.complete.obs") %>%
  corrplot()
```

#### Taux d'oxydation de glucides exogènes selon :

##### Concentration
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=concentration,y=oxi_rate_mean)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y=1.6) +
  stat_cor(label.y = 1.4) +
  theme_cowplot()
```
**Taux d'oxydation selon concentration et masse**
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=concentration,y=oxi_rate_mean, color=mass)) +
  geom_point() +
  geom_smooth(method = "lm") +
  scale_colour_gradient(low = "blue", high = "red") +
  stat_regline_equation(label.y=1.6) +
  stat_cor(label.y = 1.4) +
  theme_cowplot()
```
**Taux d'oxydation selon concentration et CHO**
```{r}
glimpse(choexo_clean)
choexo_clean$CHO <- as.numeric(choexo_clean$CHO)

choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=concentration,y=oxi_rate_mean, color=CHO)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y=1.6) +
  stat_cor(label.y = 1.4) +
  theme_cowplot()
```

**Taux d'oxydation selon concentration et type CHO**
```{r}
glimpse(choexo_clean)
choexo_clean$CHO <- as.character(choexo_clean$CHO)


choexo_clean %>%
  na.omit() %>%
  mutate(CHO=fct_recode(CHO,
                        "Glucose" = "1",
                        "Autre CHO" = "2",
                        "Mix CHO" = "3")) %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=concentration,y=oxi_rate_mean, color=CHO)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y=1.6) +
  stat_cor(label.y = 1.4) +
  theme_cowplot() +
  facet_wrap(~CHO)
```


##### Mass
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=mass,y=oxi_rate_mean)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y = 1.2) +
  stat_cor(label.y = 1) +
  theme_cowplot()
```

**Taux d'oxydation selon mass et taux ingestion**
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=mass,y=oxi_rate_mean,size=ing_rate, color=ing_rate)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y = 1.1) +
  stat_cor(label.y = 1) +
  theme_cowplot() +
  scale_colour_gradient(low = "blue", high = "red")
```


##### Dose (g) 
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=dose_g,y=oxi_rate_mean)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y = 1.5) +
  stat_cor(p.accuracy = 0.001,label.y = 1.4) +
  theme_cowplot()

```

**Taux d'oxydation selon dose et masse**
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=dose_g,y=oxi_rate_mean,color=mass)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y = 1.5) +
  stat_cor(p.accuracy = 0.001,label.y = 1.4)+
  theme_cowplot() +
  scale_colour_gradient(low = "green", high="red")
```
Avec auteur:
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300,
         dose_g < 300) %>%
  ggplot(aes(x=dose_g,y=oxi_rate_mean,color=mass)) +
  geom_point() +
  geom_smooth(method = "lm") +
  theme_cowplot() +
  scale_colour_gradient(low = "green", high="red")
```
Taux d'oxydation moyen
```{r}
Oxi_total_mean <- choexo_clean %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  mutate(oxi_total_mean = mean(oxi_rate_mean, na.rm = TRUE))
  
```

**Taux d'oxydation selon dose et type CHO**
```{r}
choexo_clean %>%
  na.omit() %>%
  mutate(CHO=fct_recode(CHO,
                        "Glucose" = "1",
                        "Autre CHO" = "2",
                        "Mix CHO" = "3")) %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=dose_g,y=oxi_rate_mean, color=CHO)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y=1.6) +
  stat_cor(p.accuracy = 0.001,label.y = 1.4) +
  theme_cowplot() +
  facet_wrap(~CHO)
```

##### Dose selon la masse (g/kg)

```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=dose_g_kg, y=oxi_rate_mean)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y = 1.4) +
  stat_cor(p.accuracy = 0.001,label.y = 1.3) +
  theme_cowplot()
```

**Taux d'oxydation selon dose/kg et taux d'ingestion**
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=dose_g_kg, y=oxi_rate_mean, color=ing_rate)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y = 1.4) +
  stat_cor(p.accuracy = 0.001,label.y = 1.3) +
  theme_cowplot() +
  scale_colour_gradient(low = "green", high = "red")
```

##### Durée d'exercice (min)

```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=dur_exerc,y=oxi_rate_mean)) +
  geom_jitter() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y = 1.5) +
  stat_cor(p.accuracy = 0.001,label.y = 1.4) +
  theme_cowplot()
```

##### Taux d'ingestion

```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=ing_rate,y=oxi_rate_mean)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y = 1.3) +
  stat_cor(p.accuracy = 0.001,label.y = 1.2) +
  theme_cowplot()
```
**Taux d'oxydation selon taux ingestion et dose par kg de poids (g/kg)**
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=ing_rate,y=oxi_rate_mean, color=dose_g_kg)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y = 1.3) +
  stat_cor(p.accuracy = 0.001,label.y = 1.2) +
  theme_cowplot() +
  scale_colour_gradient(low="green", high="red")
```

##### Dose du % dépense énergétique

```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=dose_pDE,y=oxi_rate_mean)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y = 1.3) +
  stat_cor(label.y = 1.2) +
  theme_cowplot()
```

##### VO2 à l'exercice

```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=VO2_exerc,y=oxi_rate_mean)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y = 1.3) +
  stat_cor(label.y = 1.2) +
  theme_cowplot()
```

**Taux d'oxydation selon VO2_exerc et DE**
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=VO2_exerc,y=oxi_rate_mean, color=DE_kcal)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y = 1.3) +
  stat_cor(label.y = 1.2) +
  theme_cowplot() +
  scale_colour_gradient(low = "green", high="red")
```

##### % du VO2max

```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=pVO2max,y=oxi_rate_mean)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y = 1.3) +
  stat_cor(label.y = 1.2) +
  theme_cowplot()
```

##### Dépense énergétique

```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300,
         DE_kcal < 3000) %>%
  ggplot(aes(x=DE_kcal,y=oxi_rate_mean)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y = 1.6) +
  stat_cor(p.accuracy=0.001, label.y = 1.4) +
  theme_cowplot()
```
**Taux d'oxydation selon DE et dose (g)**
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300,
         DE_kcal < 3000) %>%
  ggplot(aes(x=DE_kcal,y=oxi_rate_mean, color=dose_g)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y = 1.6) +
  stat_cor(p.accuracy=0.001, label.y = 1.4) +
  theme_cowplot() +
  scale_colour_gradient(low="green", high="red")
```

**Taux d'oxydation selon DE et dose par kg (g/kg)**
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300,
         DE_kcal < 3000) %>%
  ggplot(aes(x=DE_kcal,y=oxi_rate_mean, color=dose_g_kg)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y = 1.6) +
  stat_cor(p.accuracy=0.001, label.y = 1.4) +
  theme_cowplot() +
  scale_colour_gradient(low="green", high="red")
```

##### Type CHO

```{r}
choexo_clean %>%
  na.omit() %>%
  mutate(CHO=fct_recode(CHO,
                        "Glucose" = "1",
                        "Autre CHO" = "2",
                        "Mix CHO" = "3")) %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=CHO,y=oxi_rate_mean,color=CHO)) +
  geom_jitter() +
  geom_boxplot() +
  theme_cowplot()
```

**Taux d'oxydation selon dose, taux d'ingestion et type cHO**
```{r}
choexo_clean %>%
  na.omit() %>%
  mutate(CHO=fct_recode(CHO,
                        "Glucose" = "1",
                        "Autre CHO" = "2",
                        "Mix CHO" = "3")) %>%
  group_by(CHO) %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=dose_g,y=oxi_rate_mean,color=ing_rate)) +
  geom_jitter() +
  geom_smooth(method = lm) +
  theme_cowplot() +
  stat_regline_equation(label.y = 1.6) +
  stat_cor(p.accuracy=0.001, label.y = 1.4) +
  scale_colour_gradient(low="green", high="red") +
  facet_wrap(~CHO)
```

####Taux d'oxydation en fonction de la DE et autres variables

##### Concentration
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=concentration,y=pEn_mean)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y=40) +
  stat_cor(p.accuracy = 0.001,label.y = 35) +
  theme_cowplot()
```
##### Mass
**pEn selon la masse**
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=mass,y=pEn_mean)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y=40) +
  stat_cor(p.accuracy = 0.001,label.y = 35) +
  theme_cowplot() 
```
**pEn selon la masse et la dose (g)**
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=mass,y=pEn_mean, color = dose_g)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y=40) +
  stat_cor(p.accuracy = 0.001,label.y = 35) +
  theme_cowplot() +
  scale_colour_gradient(low="green", high="red")
```


##### Dose (g)
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=dose_g,y=pEn_mean)) +
  geom_jitter() +
  geom_smooth(method = lm) +
  theme_cowplot() +
  stat_regline_equation(label.y = 45) +
  stat_cor(p.accuracy=0.001, label.y = 40) 
```
**pEn selon dose et masse**
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=dose_g,y=pEn_mean, color = mass)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y=40) +
  stat_cor(p.accuracy = 0.001,label.y = 35) +
  theme_cowplot() +
  scale_colour_gradient(low="green", high="red")

choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=dose_g,y=pEn_mean, label = year, color = mass)) +
  geom_point() +
  geom_smooth(method = "lm") +
 geom_text_repel() +
  theme_cowplot() +
  scale_colour_gradient(low="green", high="red")
```

##### Duree exercice
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=dur_exerc,y=pEn_mean)) +
  geom_jitter() +
  geom_smooth(method = lm) +
  theme_cowplot() +
  stat_regline_equation(label.y = 45) +
  stat_cor(p.accuracy=0.001, label.y = 40) 
```

##### Taux d'ingestion
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=ing_rate,y=pEn_mean)) +
  geom_jitter() +
  geom_smooth(method = lm) +
  theme_cowplot() +
  stat_regline_equation(label.y = 45) +
  stat_cor(p.accuracy=0.001, label.y = 40) 
```
**pEn selon taux ingestion et dose par kg**
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=ing_rate,y=pEn_mean, color = dose_g_kg)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y=40) +
  stat_cor(p.accuracy = 0.001,label.y = 35) +
  theme_cowplot() +
  scale_colour_gradient(low="green", high="red")
```


##### Dose par poids g/kg
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=dose_g_kg,y=pEn_mean)) +
  geom_jitter() +
  geom_smooth(method = lm) +
  theme_cowplot() +
  stat_regline_equation(label.y = 45) +
  stat_cor(p.accuracy=0.001, label.y = 40) 
```

##### Dose du % DE
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=dose_pDE,y=pEn_mean)) +
  geom_jitter() +
  geom_smooth(method = lm) +
  theme_cowplot() +
  stat_regline_equation(label.y = 45) +
  stat_cor(p.accuracy=0.001, label.y = 40) 
```
**pEn selon dose en % DE et taux ingestion**
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=dose_pDE,y=pEn_mean, color = ing_rate)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y=40) +
  stat_cor(p.accuracy = 0.001,label.y = 35) +
  theme_cowplot() +
  scale_colour_gradient(low="green", high="red")
```

##### VO2 exerc
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=VO2_exerc,y=pEn_mean)) +
  geom_jitter() +
  geom_smooth(method = lm) +
  theme_cowplot() +
  stat_regline_equation(label.y = 45) +
  stat_cor(p.accuracy=0.001, label.y = 40) 
```

##### % du VO2 max
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=pVO2max,y=pEn_mean)) +
  geom_jitter() +
  geom_smooth(method = lm) +
  theme_cowplot() +
  stat_regline_equation(label.y = 45) +
  stat_cor(p.accuracy=0.001, label.y = 40) 
```
**pEn selon %VO2max et dose g/kg**
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=pVO2max,y=pEn_mean, color = dose_g_kg)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_regline_equation(label.y=40) +
  stat_cor(p.accuracy = 0.001,label.y = 35) +
  theme_cowplot() +
  scale_colour_gradient(low="green", high="red")
```

##### Dépense énergétique
```{r}
choexo_clean %>%
  na.omit() %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=DE_kcal,y=pEn_mean)) +
  geom_jitter() +
  geom_smooth(method = lm) +
  theme_cowplot() +
  stat_regline_equation(label.y = 45) +
  stat_cor(p.accuracy=0.001, label.y = 40) 
```

##### Type CHO
```{r}
choexo_clean %>%
  na.omit() %>%
  mutate(CHO=fct_recode(CHO,
                        "Glucose" = "1",
                        "Autre CHO" = "2",
                        "Mix CHO" = "3")) %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=CHO,y=pEn_mean)) +
  geom_boxplot() +
  geom_smooth(method = lm) +
  theme_cowplot() +
  stat_regline_equation(label.y = 1.6) +
  stat_cor(p.accuracy=0.001, label.y = 1.4) +
  scale_colour_gradient(low="green", high="red")
```

**pEn selon dose g/kg et CHO**
```{r}
choexo_clean %>%
  na.omit() %>%
  mutate(CHO=fct_recode(CHO,
                        "Glucose" = "1",
                        "Autre CHO" = "2",
                        "Mix CHO" = "3")) %>%
  group_by(CHO) %>%
  filter(year %in% 2000:2020,
         concentration < 300) %>%
  ggplot(aes(x=dose_g_kg,y=pEn_mean)) +
  geom_point() +
  geom_smooth(method = lm) +
  theme_cowplot() +
  stat_regline_equation(label.y = 45) +
  stat_cor(p.accuracy=0.001, label.y = 40) +
  scale_colour_gradient(low="green", high="red") +
  facet_wrap(~CHO)
```

# Régression linéaire multiple
**Installed packages regression**
```{r}
install.packages("caTools")
library(caTools)
```

#### Taux d'oxydation
Les variables indépendantes ayant une relation forte et significative sur le taux d'oxydation (variable dépendante):
- Concentration
- Dose (g)
- Dose/masse (g/kg)
- Durée d'exercice
- Taux d'ingestion
- Dépense énergétique
Voir aussi
- CHO
- Sexe
```{r}
choexo_clean$sex = factor(choexo_clean$sex,
                          levels = c('1', '2', '3'),
                          labels = c('Homme','Femme','Mix'))
choexo_clean$sex = as.numeric(choexo_new$sex)

summary(choexo_clean$sex)
view(choexo_clean$sex)
```


**Predictors variables**
```{r}
Predictors = lm(formula = oxi_rate_mean ~ mass + sex + dose_g + dur_exerc + ing_rate + dose_g_kg + pVO2max + DE_kcal + concentration,
                data = choexo_clean)

summary(Predictors)
```

```{r}
Predictors = lm(formula = oxi_rate_mean ~ mass + sex + dose_g + dur_exerc + ing_rate + dose_g_kg + pVO2max + DE_kcal,
                data = choexo_clean)

summary(Predictors)

Predictors = lm(formula = oxi_rate_mean ~ mass + dose_g + dur_exerc + dose_g_kg + ing_rate + pVO2max + DE_kcal,
                data = choexo_clean)

summary(Predictors)

Predictors = lm(formula = oxi_rate_mean ~ mass + dose_g + dur_exerc + dose_g_kg + ing_rate + DE_kcal,
                data = choexo_clean)

summary(Predictors)

Predictors = lm(formula = oxi_rate_mean ~ mass + dose_g + dur_exerc + dose_g_kg + DE_kcal,
                data = choexo_clean)

summary(Predictors)
```

### % énergie provenant des glucides
Les variables indépendantes ayant une forte relation et une valeur de p significative avec le % de l'énergie provenant des glucides:
- Concentration
- Dose
- Dose/masse
- Durée exercice
- Taux d'ingestion
- Dose du % DE
- % VO2 max

```{r}
Predictors2 = lm(formula = pEn_mean ~ mass + dose_g + dur_exerc + ing_rate + dose_g_kg + pVO2max + concentration,
                data = choexo_clean)

summary(Predictors2)
```

###Multicolinéarité
**VIF**
```{r}
Predictors = lm(formula = oxi_rate_mean ~ mass + sex + dose_g + dur_exerc + ing_rate + dose_g_kg + pVO2max + DE_kcal + concentration,
                data = choexo_clean)

summary(Predictors)

vif(Predictors)
```

###Avec broom package/tidyverse/tidymodel
```{r}
style_text("Predictors1", scope = "spaces")

Predictors1 = lm(formula = oxi_rate_mean ~ mass + sex + dose_g + dur_exerc + ing_rate + dose_g_kg + pVO2max + DE_kcal + concentration,
                data = choexo_clean)

glance(Predictors1) %>%
  summary()

tidy(Predictors1) %>%
  arrange(desc(abs(statistic))) %>%
  summary()
```

######Résumé des relations entre données et taux d'oxydation
```{r}
choexo_clean %>%
  na.omit() %>%
  select(-year, -design, -oxi_rate_sd, -n, -pEn_sd) %>%
  pivot_longer(cols = 6:23, names_to = "predictor", values_to = "data") %>%
ggplot(aes(x = data, y = oxi_rate_mean))+
  scale_y_continuous(trans = scales::sqrt_trans(), labels = function(x) round(x,2))+
  geom_jitter()+
  geom_smooth(se = FALSE, method = "lm", formula = "y ~ x", aes(color = "Linear"))+
   ggsci::scale_color_jco()+
  facet_wrap(~predictor, scales = "free_x")+
  ggpubr::theme_pubclean()+
  theme(strip.background.x = element_blank(), legend.key = element_blank(), 
        legend.position = "right", panel.background = element_rect(colour = "black"))

```

```{r}
choexo_clean %>%
  na.omit() %>%
  filter(concentration < 300) %>%
  select(-year, -design, -oxi_rate_sd, -n, -pEn_sd) %>%
  pivot_longer(cols = 6:14, names_to = "predictor", values_to = "data") %>%
ggplot(aes(x = data, y = oxi_rate_mean))+
   scale_y_continuous(labels = function(x) round(x,2))+
  geom_jitter()+
  geom_smooth(se = FALSE, method = "lm", formula = "y ~ x", aes(color = "Linear")) +
  stat_cor(p.accuracy=0.001, label.y = 1.1) +
  facet_wrap(~predictor, scales = "free_x")+
  ggpubr::theme_pubclean()+ 
  theme(strip.background.x = element_blank(),legend.key = element_blank(),
          legend.position = "right",panel.background = element_rect(colour = "black"))
```

```{r}
choexo_clean %>%
  na.omit() %>%
  select(-year, -design, -oxi_rate_sd, -n, -pEn_sd) %>%
  filter(concentration < 300) %>%
  pivot_longer(cols = 15:23, names_to = "predictor", values_to = "data") %>%
ggplot(aes(x = data, y = oxi_rate_mean))+
  scale_y_continuous(labels = function(x) round(x,2))+
  geom_jitter()+
  geom_smooth(se = FALSE, method = "lm", formula = "y ~ x", aes(color = "Linear"))+
  stat_cor(p.accuracy=0.001, label.y = 1.2) +
  facet_wrap(~predictor, scales = "free_x")+
  ggpubr::theme_pubclean()+
  theme(strip.background.x = element_blank(), legend.key = element_blank(), 
          legend.position = "right", panel.background = element_rect(colour = "black"))
```

#Séparer en training et test
```{r}
install.packages("rsample")

choexo_clean.split = choexo_clean %>%
  rsample::initial_split(prop=0.8)

choexo_clean.split
#170 observations au total, 137 dans training et 33 dans test

#creer des data frame avec les donnees du training et du test
choexo_clean.train = choexo_clean.split %>%
  training()

choexo_clean.test = choexo_clean.split %>%
  testing()
```
#Recipe
```{r}
#Creer une recette afin de pretraiter les donnees de training et test
install.packages("recipes")

library(recipes)

choexo.recipe = choexo_clean.train %>%
  recipe(oxi_rate_mean ~ mass + sex + dose_g + dur_exerc + ing_rate + dose_g_kg + pVO2max + DE_kcal + concentration) %>%
step_corr(all_numeric()) %>%
  step_knnimpute(all_numeric()) %>%
  prep()

#step_corr = retire les varaibles qui ont une grande corrélation avec d'autres variables, donc supprime la multicorréliarité?

choexo.recipe
#extraire avec training set
choexo_clean.training <- choexo.recipe %>%
  juice()
#appliquer au test set
choexo_clean.testing <- choexo.recipe %>%
  bake(choexo_clean.test)

```


#Regression multiple lineaire 
```{r}
#Faire une modele lineaire
choexo_clean.lm = linear_reg() %>%
  set_engine(engine="lm") %>%
  set_mode(mode="regression")

#on met ce modele avec training
choexo_clean.fit = choexo_clean.lm %>%
  fit(oxi_rate_mean~.,
      data = choexo_clean.training)

summary(choexo_clean.fit)

tidy(choexo_clean.fit)
#trouver le R2

#predict avec modele lineaire
choexolm.predict <- choexo_clean.fit %>%
  predict(choexo_clean.testing) %>%
  bind_cols(choexo_clean.testing)

#ligne = prediction parfaite (predit vs reel)
choexolm.predict %>%
  ggplot(aes(x=oxi_rate_mean, y=.pred)) +
  geom_point() +
  geom_abline(slope =1)

choexolm.predict

#Evaluer modele lineaire
choexolm.predict %>%
  metrics(truth = oxi_rate_mean, estimate =.pred) 

#Stats et graphique
choexo_cleanlm.stats = choexo_clean.fit %>%
  tidy(interval = TRUE) %>%
  glimpse()

choexo_cleanlm.stats %>%
  ggplot(aes(x=term, y=estimate)) +
  geom_point() +
  geom_errorbar(aes(ymin = estimate-std.error, ymax=estimate+std.error)) +
  scale_y_continuous() +
  ggpubr :: theme_pubclean() +
  labs(x = "predictors", y="choexo.estimate")

```


#LASSO regression
```{r}
install.packages("Matrix")
install.packages("glmnet")
library(glmnet)

#Preparing the data
###Splitting the data en test et training (fait)

#building the LASSO model
lasso_choexo <- model.matrix(oxi_rate_mean ~ ., data = choexo_clean)[,-1]

y1 = choexo_clean2$oxi_rate_mean
x1 = choexo_clean2 %>% 
#glmnet a besoin de vecteurs (x et y) et d'une matrix de predicteur

#specifier un intervalle de lambdas
lambdas <- 10^seq(2, -3, by = -.1)

#alpha =1 pour LASSO regression
lasso.choexoclean <- cv.glmnet(x,y, alpha = 1, lambda = lambdas, standardize = TRUE, type.measure = "mse")

#meilleur lambda
lambda.best <- lasso.choexoclean$lambda.min

plot(lasso.choexoclean)


```
LASSO Udemy
```{r}
y1 <- as.numeric(choexo_clean2$oxi_rate_mean)
y1 <- choexo_clean2 %>%
  dplyr::select(oxi_rate_mean)
x1 = choexo_clean2 %>%
  dplyr::select(sex:pEn_mean) %>%
  data.matrix()

class(choexo_clean2)

x1 <- choexo_clean2 %>%
  dplyr::select(-X)

?glmnet
str(x1)
lambdas = 10^seq(3, -2, by = -.1)
#comment déterminer lambda?

choexoglmnet <- glmnet(x1 , y1)
#glmnet essayer plusieurs fois le modele pour differente valeur du lambda

```

Évaluer multi avec vIF
```{r}
install.packages("gapminder")
install.packages("MASS")
install.packages("usdm")
install.packages("texreg")
install.packages("MPV")
library(gapminder)
library(usdm)
library(texreg)
library(MPV)

install.packages("MASS")
install.packages("ipred")
library(MASS)

choexo_clean2 <- dplyr::select(choexo_clean, -c(ID, author, ref, design, year, CHO))
data.frame(Variables = colnames(choexo_clean2))

dim(choexo_clean2)
#170 observation et 22 predicteurs

glimpse(choexo_clean2)
```
```{r}
choexo_model <- lm(oxi_rate_mean ~., data = choexo_clean2)
summary(choexo_model)
plot(choexo_model, which =1)
```
VIF pour le modèle clean2
```{r}
vif.1 <- usdm::vif(choexo_clean2)
vif.1

choexo_clean3 <- dplyr::select(choexo_clean2, -c(oxi_rate_sd, dose_g, VO2_exerc,dose_pDE,dur_exerc,VO2_spec,pEn_sd,VO2max))
vif.2 <- usdm::vif(choexo_clean3)

```

LASSO (site thatdata)
```{r}
X <- model.matrix(oxi_rate_mean~., data=choexo_clean3)

Y <- choexo_clean3$oxi_rate_mean

lambdas <- 10^{seq(from = -2, to = 10, length = 200)}

choexofit <- glmnet(X, Y, alpha = 1, lambda = lambdas)
#pas le meme nombre de rangee dans x et dans y?

choexo.cv <- cv.glmnet(X, Y, alpha=1, lambda = lambdas)
```

PCR Regression
```{r}
install.packages("pls")
library(pls)
pcr_choexo <- pcr(oxi_rate_mean ~ ., data=choexo_clean2, scale=TRUE, validation = "CV") 

summary(pcr_choexo)

#Regarder % variance explained  : pas besoin de tous les components pour expliquer la variance (entre 8 et 10 85-90% est expliquer)

#RMSE : diminution de l'erreur dans les valeurs predites de Y
validationplot(pcr_choexo)
#on veut la plus faible valeur d'erreur (RMSEP) : la valeur serait entre 10 et 15

#plot le R2
validationplot(pcr_choexo, val.type = "R2")
#quand on ajoute 13-14 components, environ 90% de la variation en y est expliquer

#plot Mean square error
validationplot(pcr_choexo, val.type="MSEP")
#plus faible M = 12-13

choexopcr_varI <- varImp(pcr_choexo)%>%
  arrange()

#predict vs reel
predplot(pcr_choexo)

#regression coefficient
coefplot(pcr_choexo)

prednames(pcr_choexo)

explvar(pcr_choexo)


#fit PCR sur le full data avec 12 components

x2=model.matrix(oxi_rate_mean~., choexo_clean2)[,-1]

y2 = choexo_clean2 %>%
  select(oxi_rate_mean) %>%
  unlist() %>%
  as.numeric()

pcr_predchoexo = pcr(y2~x2, scale = TRUE, ncomp = 12)
```


#Varible importance of regression models
```{r}
install.packages("relaimpo")
library(relaimpo)
#variable importance in OLF models. % contribution of the different predictors

install.packages("hier.part")
library(hier.part)

ncol(choexo_clean2)

x=choexo_clean2[,10:21]

#determine la proportion de la variance de y soit explique par chacun des 12 predicteurs
#hier.part:Goodness of Fit Calculation and Hierarchical Partitioning: Partitions variance in a multivariate dataset
H=hier.part(choexo_clean2$oxi_rate_mean,x,fam = "gaussian",gof = "Rsqu")

H$I.perc %>%
  glimpse()

choexovar <- varImp(choexo_clean2, scale = FALSE)

#essayer fonction calc.relimp (Function to calculate relative importance metrics for linear models)
            
```

MARS 1.1
```{r}
#require
install.packages("earth")
install.packages("vip")
install.packages("pdp")

library(earth)
library(vip)
library(pdp)
```
```{r}
#split les donnees en training et test
set.seed(123)

choexo_na <- choexo_clean %>%
  slice(-c(129, 130, 131, 148, 149))

choexo_clean.split = choexo_na %>%
  rsample::initial_split(prop=0.8, list=FALSE)

choexo_clean.split
#165 observations au total, 133 dans training et 32 dans test

#creer des data frame avec les donnees du training et du test
choexo_clean.train = choexo_clean.split %>%
  training()

choexo_clean.test = choexo_clean.split %>%
  testing()
```

MARS sur nos données 1.2
```{r}
choexo_training <- choexo_clean.training %>%
  select(-c(ID, author, X, ref, design, n))

choexo_mars <- earth(oxi_rate_mean ~ ., data=choexo_training)
#faible valeur de GCV est mieux
choexo_mars
#R2 = le modele explique 98% de la variation de y 
#GCV = compare la performance de modele subset pour choisir le meilleur subset
print(choexo_mars)

#signifie aue si on regarde tous les coefficients, on verrait qu'il y a 22 terms inclus dans notre modèle
#signification de terms? 

#l'importance des differentes variables
evimp(choexo_mars)

#modele avec le test
p=predict(choexo_mars, newdata = choexo_clean.test)
head(p)
choexo.p=as.data.frame(p)

choexo.final = cbind(choexo_clean.test$oxi_rate_mean,choexo.p)
head(choexo.final)
#les valeurs semblent etre similaires

cor(choexo_clean.test$oxi_rate_mean,)
#la correlation n'apparait pas
```


Nettoyer Code
```{r}
install.packages("styler")
library(styler)

style_text()
```

