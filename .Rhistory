write.csv(choexo_new, "choexo_clean.csv")
#Réorganisation des données
choexo_new <- choexo %>%
select(ID:year, design:pEn_sd, CHO) %>%
mutate(VO2_exerc=str_extract(VO2_exerc,"[0-9].[0-9]+"))
write.csv(choexo_new, "choexo_clean.csv")
#Réorganisation des données
choexo_new <- choexo %>%
select(ID:year, design:pEn_sd, CHO) %>%
mutate(VO2_exerc=str_extract(VO2_exerc,"[0-9].[0-9]+"))
y1 <- as.numeric(choexo_clean2$oxi_rate_mean)
y1 <- choexo_clean2 %>%
dplyr::select(oxi_rate_mean)
x1 = choexo_clean2 %>%
dplyr::select(sex:pEn_mean) %>%
data.matrix()
choexoglmnet <- glmnet(x1 , y1, alpha =1, lambda = lambdas)
X <- model.matrix(oxi_rate_mean~., data=choexo_clean3)
Y <- choexo_clean3$oxi_rate_mean
choexofit <- glmnet(X, Y, alpha = 1, lambda = lambdas, standardize = TRUE)
choexofit <- glmnet(X, Y, alpha = 1, lambda = lambdas)
choexoglmnet <- glmnet(x1 , y1, alpha =1, lambda = lambdas)
View(x1)
str(x1)
choexofit <- glmnet(X, Y, alpha = 1, lambda = lambdas)
View(choexo_clean2)
x1 <- choexo_clean2 %>%
select(-X)
x1 <- choexo_clean2 %>%
dplyr::select(-X)
?glmnet
choexoglmnet <- glmnet(x1 , y1)
class(choexo_model)
class(choexo_clean2)
choexo_mars <- earth(oxi_rate_mean ~ ., data=choexo_clean.train)
?slide
?slice
test <- choexo_clean.train %>%
slice(-3)
View(test)
summary(pcr_choexo)
#plot le R2
validationplot(pcr_choexo, val.type = "R2")
predplot(pcr_choexo)
#plot le R2
validationplot(pcr_choexo, val.type = "R2")
?varImp
varImp(pcr_choexo)
plot(varImp(pcr_choexo, 10))
plot(varImp(pcr_choexo))
ggplot(varImp(pcr_choexo), aes(X, Overall)) + geom_bar()
ggplot(varImp(pcr_choexo), aes(Overall)) + geom_bar()
ggplot(varImp(pcr_choexo), aes(X, Overall)) + geom_col()
ggplot(varImp(pcr_choexo), aes(Overall)) + geom_col()
varImp(pcr_choexo, sort = TRUE)
choexo_na <- choexo_clean.train %>%
slice(-129,130,131,148,149)
choexo_na <- choexo_clean.train %>%
slice(-129, -130, -131, -148, -149)
View(choexo_na)
test <- choexo_clean.train %>%
slice(-129, 130, 131, 148, 149)
test <- choexo_clean.train %>%
slice(-c(129, 130, 131, 148, 149))
View(test)
choexo_test <- choexo_clean.train %>%
slice(-129)
View(choexo_test)
View(choexo_clean.train)
View(choexo_clean.train)
View(choexo_clean)
View(choexo_clean)
choexo_na <- choexo_clean %>%
slice(-c(129, 130, 131, 148, 149))
View(choexo_na)
choexo_clean.split = choexo_na %>%
rsample::initial_split(prop=0.8)
choexo_clean.split
#creer des data frame avec les donnees du training et du test
choexo_clean.train = choexo_clean.split %>%
training()
choexo_clean.test = choexo_clean.split %>%
testing()
choexo_mars <- earth(oxi_rate_mean ~ ., data=choexo_clean.train)
View(choexo_clean.train)
choexo_mars <- earth(oxi_rate_mean ~ ., data=choexo_clean.train, na.action = TRUE)
choexo_mars <- earth(oxi_rate_mean ~ ., data=choexo_clean.train, na.action = na.exclude)
#extraire avec training set
choexo_clean.training = choexo.recipe %>%
juice()
choexo.recipe = choexo_clean.train %>%
recipe(oxi_rate_mean ~ mass + sex + dose_g + dur_exerc + ing_rate + dose_g_kg + pVO2max + DE_kcal + concentration) %>%
step_corr(all_numeric()) %>%
step_knnimpute(all_numeric()) %>%
prep()
choexo.recipe = choexo_clean.train %>%
recipe(oxi_rate_mean ~ .) %>%
step_corr(all_numeric()) %>%
step_knnimpute(all_numeric()) %>%
prep()
#extraire avec training set
choexo_clean.training = choexo.recipe %>%
juice()
#appliquer au test srt
choexo_clean.testing = choexo.recipe %>%
bake(choexo_clean.test)
choexo.recipe = choexo_clean.train %>%
recipe(oxi_rate_mean ~ mass + sex + dose_g + dur_exerc + ing_rate + dose_g_kg + pVO2max + DE_kcal + concentration) %>%
step_corr(all_numeric()) %>%
step_knnimpute(all_numeric()) %>%
prep()
choexo_clean.train <- choexo_clean.train[!is.na(), ]
choexo_mars <- earth(oxi_rate_mean ~ ., data=choexo_clean.train, na.action = na.pass)
choexo_mars <- earth(oxi_rate_mean ~ ., data=choexo_clean.train)
choexo_mars <- earth(formula = oxi_rate_mean ~ ., data=choexo_clean.train)
choexo_mars <- earth(formula = oxi_rate_mean ~ ., data=choexo_clean)
choexo_mars <- earth(formula = oxi_rate_mean ~ ., data=choexo_clean3)
choexo_mars <- earth(formula = oxi_rate_mean ~ ., data=choexo_clean.training)
View(choexo_mars)
print(choexo_mars)
plot(choexo_mars, which =1)
View(choexo_clean.training)
choexo_mars <- earth(formula = oxi_rate_mean ~ ., data=choexo_clean.train)
choexo_clean.train1 <- choexo_clean.train %>%
step_knnimpute()
choexo_clean.train1 <- choexo_clean.train %>%
step_knnimpute(all_numeric())
choexo_mars <- earth(formula = oxi_rate_mean ~ ., data=choexo_clean.train1)
choexo_mars <- earth(formula = oxi_rate_mean ~ ., data=choexo_clean.train1)
choexo_mars <- earth(formula = oxi_rate_mean ~ ., data=choexo_clean.train)
choexo_mars <- earth(formula = oxi_rate_mean ~ ., data=choexo_clean.train)
choexo_mars <- earth(formula = oxi_rate_mean ~ ., data=choexo_clean.training)
plot(choexo_mars, which =1)
plot(choexo_mars, which =2)
plot(choexo_mars, which =3)
plot(choexo_mars, which =4)
plot(choexo_mars, which =1)
summary(choexo_mars)
summary(choexo_mars) %>%
.$coefficient
plot(choexo_mars, which =1)
floor()
#créer un tuning grid pour hyperparameters? : creer un dataframe avec toutes les combinaisons entre les variables
choexo_grid <- expand.grid(degree = 1:3, nprune = seq(2,100,lenght.out=10) %>%
floor())
View(choexo_grid)
set.seed(123)
#cross validated model
choexo_tuned <- train(x=subset(choexo_clean.training, select = -oxi_rate_mean),
y= choexo_clean.training$oxi_rate_mean,
method="earth",
metric = "RMSE",
trControl = trainControl(method = "cv", number = 10),
tuneGrid = choexo_grid))
#cross validated model
choexo_tuned <- train(x=subset(choexo_clean.training, select = -oxi_rate_mean),
y= choexo_clean.training$oxi_rate_mean,
method="earth",
metric = "RMSE",
trControl = trainControl(method = "cv", number = 10),
tuneGrid = choexo_grid)
#multiple regreeion
choexo_cvmodel <- train(oxi_rate_mean ~., data=choexo_clean.training,
metho = "lm",
metric = "RMSE",
trControl = trainControl(method="cv", number = 10),
preProcess = c("zv", "center", "scale"))
trControl = trainControl(method="cv", number = 10)
#multiple regression
choexo_cvmodel <- train(oxi_rate_mean ~., data=choexo_clean.training,
metho = "lm",
metric = "RMSE",
trControl = trainControl(method="cv", number = 10))
#multiple regression
choexo_cvmodel <- train(oxi_rate_mean ~., data=choexo_clean.training,
metho = "lm",
metric = "RMSE",
trControl = trainControl(method="cv", number = 10))
library(earth)
library(vip)
library(pdp
library(pls)
library(gapminder)
library(usdm)
library(texreg)
library(MPV)
install.packages("MASS")
install.packages("ipred")
install.packages("MASS")
install.packages("ipred")
library(MASS)
pacman::p_load(googlesheets,gsheet,csv,tidyverse,here,RColorBrewer,cowplot,ggrepel,ggpubr,corrplot,caTools,caret, car, broom, ggplot2, dplyr, rsample, parsnip, recipes, yardstick, ranger, skimr,leaps)
install.packages("ipred")
#multiple regression
choexo_cvmodel <- train(oxi_rate_mean ~., data=choexo_clean.training,
metho = "lm",
metric = "RMSE",
trControl = trainControl(method="cv", number = 10))
View(choexo_cvmodel)
summary(choexo_cvmodel)
choexo_pcrmodel <- train(oxi_rate_mean ~., data=choexo_clean.training,
method = "pcr",
trControl = trainControl(method="cv", number = 10),
metric = "RMSE",
preProcess= c("zv", "center", "scale"),
tuneLenght = 20)
View(choexo_pcrmodel)
choexo_pcrmodel
pcr_choexo <- pcr(oxi_rate_mean ~ ., data=choexo_clean2, scale=TRUE, validation = "CV")
library(pls)
pcr_choexo <- pcr(oxi_rate_mean ~ ., data=choexo_clean2, scale=TRUE, validation = "CV")
summary(pcr_choexo)
predplot(pcr_choexo)
install.packages("relaimpo")
library(relaimpo)
choexofit = lm(oxi_rate_mean~., data = choexo_clean2)
calc.relimp(choexofit, type = c("lmg"), rela = TRUE)
calc.relimp(choexofit, type = c("lmg"), rela = TRUE)
calc.relimp(choexofit, rela = TRUE)
calc.relimp(choexofit, type = "lmg")
calc.relimp(choexofit, type = "lmg", is.inifinite = FALSE)
calc.relimp(choexofit, type = "lmg", is.infinite = FALSE)
choexofit = lm(oxi_rate_mean~., data = choexo_clean3)
calc.relimp(choexofit, type = c("lmg"), rela=TRUE)
choexofit = lm(oxi_rate_mean~., data = choexo_clean2)
calc.relimp(choexofit$oxi_rate_mean, type = "lmg", rela=TRUE)
calc.relimp(pcr_choexo, type = "lmg", rela=TRUE)
choexofit = lm(oxi_rate_mean~., data = choexo_clean.training)
calc.relimp(choexofit, type = "lmg", rela=TRUE)
calc.relimp(choexofit, type = c("lmg"), rela=TRUE)
install.packages("hier.part")
library(hier.part)
ncol(choexo_clean2)
View(choexo_clean2)
x=choexo_clean2[,10:22]
H=hier.part((choexo_clean2$oxi_rate_mean,x, fam = "gaussian", gof = "Rsqu"))
H=hier.part((choexo_clean2$oxi_rate_mean,x,fam = "gaussian",gof = "Rsqu"))
H=hier.part(choexo_clean2$oxi_rate_mean,x,fam = "gaussian",gof = "Rsqu")
x=choexo_clean2[,10:21]
H=hier.part(choexo_clean2$oxi_rate_mean,x,fam = "gaussian",gof = "Rsqu")
H$I.perc
View(H)
H$I.perc
#determine la proportion de la variance de y soit explique par chacun des 12 predicteurs
H=hier.part(choexo_clean2$oxi_rate_mean,x,fam = "gaussian",gof = "Rsqu")
#plot le R2
validationplot(pcr_choexo, val.type = "R2")
varImp(pcr_choexo, scale = FALSE)
varImp(pcr_choexo, scale = FALSE)
varImp(pcr_choexo, scale = TRUE)
choexovar <- varImp(pcr_choexo, scale = FALSE)
View(choexovar)
VarImp(choexofit, scale = FALSE)
varImp(choexofit, scale = FALSE)
varImp(choexofit, scale = FALSE) %>%
glimpse()
varImp(pcr_choexo, scale = FALSE) %>%
glimpse()
View(choexovar)
choexo_clean.split = choexo_na %>%
rsample::initial_split(prop=0.8, list=FALSE)
choexo_clean.split
#creer des data frame avec les donnees du training et du test
choexo_clean.train = choexo_clean.split %>%
training()
choexo_clean.test = choexo_clean.split %>%
testing()
choexo_mars <- earth(oxi_rate_mean ~ ., data=choexo_clean.training)
#faible valeur de GCV est mieux
choexo_mars
View(choexo_clean.training)
choexo_training <- choexo_clean.training %>%
select(-c(ID, year, author, X, ref, design, n))
choexo_training <- choexo_clean.training %>%
select(-c(ID, author, X, ref, design, n))
choexo_mars <- earth(oxi_rate_mean ~ ., data=choexo_training)
#faible valeur de GCV est mieux
choexo_mars
evimp(choexo_mars)
p=predict(choexo_mars, newdata = testing)
p=predict(choexo_mars, newdata = choexo_clean.test)
head(p)
p= as.data.frame()
choexo.p=as.data.frame(p)
#sur le test frame
p=predict(choexo_mars, newdata = choexo_clean.testing)
#sur le test frame
p=predict(choexo_mars, newdata = choexo_clean.test)
choexo.final = cbind(choexo_clean.test$oxi_rate_mean,choexo.p)
head(choexo.final)
head(choexo.final)
View(choexo.final)
cor(choexo_clean.test$oxi_rate_mean,choexo.p)
cor(choexo_clean.test$oxi_rate_mean,p)
#multiple regression
choexo_cvmodel <- train(oxi_rate_mean ~., data=choexo_clean.training,
metho = "lm",
metric = "RMSE",
trControl = trainControl(method="cv", number = 10))
fitControl = trainControl(method = "cv", number = 10)
modfit2 = train(oxi_rate_mean~., data = choexo_clean.training, method = "earth", trControl = fitControl)
summary(modfit2)
p2=predict(modfit2, newdata = choexo_clean.test)
choexo_testing <- choexo_clean.test %>%
select(-c(ID, author, X, ref, design, n))
p2=predict(modfit2, newdata = choexo_testing)
choexo_testing <- choexo_clean.testing %>%
select(-c(ID, author, X, ref, design, n))
#appliquer au test srt
choexo_clean.testing = choexo.recipe %>%
bake(choexo_clean.test)
p2=predict(modfit2, newdata = choexo_testing)
View(choexo_testing)
#determine la proportion de la variance de y soit explique par chacun des 12 predicteurs
H=hier.part(choexo_clean2$oxi_rate_mean,x,fam = "gaussian",gof = "Rsqu")
H$I.perc
View(H)
H$I.perc %>%
glimpse()
#determine la proportion de la variance de y soit explique par chacun des 12 predicteurs
#hier.part:Goodness of Fit Calculation and Hierarchical Partitioning: Partitions variance in a multivariate dataset
H=hier.part(choexo_clean2$oxi_rate_mean,x,fam = "gaussian",gof = "Rsqu")
varImp(choexofit, scale = FALSE) %>%
glimpse()
View(choexovar)
varImp(H, scale = FALSE) %>%
glimpse()
choexovar <- varImp(choexo_clean2, scale = FALSE)
choexopcr_varI <- varImp(pcr_choexo, scale = FALSE)
choexovar <- varImp(choexo_clean2, scale = FALSE)
View(pcr_choexo)
predplot(pcr_choexo)
summary(pcr_choexo)
#plot Mean square error
validationplot(pcr_choexo, val.type="MSEP")
coefplot(pcr_choexo)
prednames(pcr_choexo)
compnames(pcr_choexo)
respnames(pcr_choexo)
predpnames(pcr_choexo)
prednames(pcr_choexo)
explvar(pcr_choexo)
prednames(pcr_choexo)
explvar(pcr_choexo)
install.packages("factoextra")
library(factoextra)
get_pca_var(pcr_choexo, element = c("var", "ind"))
get_pca(pcr_choexo, element = c("var", "ind"))
get_pca_var(pcr_choexo)
#plot Mean square error
validationplot(pcr_choexo, val.type="MSEP")
x2=model.matrix(oxi_rate_mean~., choexo_clean2)[,-1]
y = choexo_clean2 %>%
select(oxi_rate_mean) %>%
unlist() %>%
as.numeric()
pcr_predchoexo = predict(pcr_choexo, y~x, scale = TRUE, ncomp = 12)
pcr_predchoexo = pcr(y~x, scale = TRUE, ncomp = 12)
y2 = choexo_clean2 %>%
select(oxi_rate_mean) %>%
unlist() %>%
as.numeric()
pcr_predchoexo = pcr(y2~x2, scale = TRUE, ncomp = 12)
choexopcr_varI <- varImp(pcr_choexo, scale = FALSE)
View(choexopcr_varI)
choexopcr_varI <- varImp(pcr_choexo, scale = TRUE)
#regression coefficient
coefplot(pcr_choexo)
#plot le R2
validationplot(pcr_choexo, val.type = "R2")
#plot Mean square error
validationplot(pcr_choexo, val.type="MSEP")
choexopcr_varI <- varImp(pcr_choexo, scale = TRUE)
choexopcr_varI <- varImp(pcr_choexo, scale = TRUE) %>%
sum(.)
summary(pcr_choexo)
choexopcr_varI <- varImp(pcr_choexo, scale = TRUE)
choexopcr_varI <- varImp(pcr_choexo, scale = TRUE)
choexopcr_varI <- varImp(pcr_choexo, scale = TRUE)%>%
sort()
choexopcr_varI <- varImp(pcr_choexo, scale = TRUE)%>%
sort(.)
choexopcr_varI <- varImp(pcr_choexo, scale = TRUE)%>%
sort(Overall)
choexopcr_varI <- varImp(pcr_choexo, scale = TRUE)%>%
sort("Overall")
choexopcr_varI <- varImp(pcr_choexo, scale = TRUE)%>%
arrange()
choexopcr_varI <- varImp(pcr_choexo, scale = TRUE)%>%
arrange()
View(choexopcr_varI)
choexopcr_varI <- varImp(pcr_choexo)%>%
arrange()
#plot le R2
validationplot(pcr_choexo, val.type = "R2")
#determine la proportion de la variance de y soit explique par chacun des 12 predicteurs
#hier.part:Goodness of Fit Calculation and Hierarchical Partitioning: Partitions variance in a multivariate dataset
H=hier.part(choexo_clean2$oxi_rate_mean,x,fam = "gaussian",gof = "Rsqu")
View(H)
#R2 = le modele explique 98% de la variation de y
#GCV = compare la performance de modele subset pour choisir le meilleur subset
print(choexo_mars)
#l'importance des differentes variables
evimp(choexo_mars)
choexo.final = cbind(choexo_clean.test$oxi_rate_mean,choexo.p)
head(choexo.final)
#modele avec le test
p=predict(choexo_mars, newdata = choexo_clean.test)
head(p)
choexo.p=as.data.frame(p)
choexo.final = cbind(choexo_clean.test$oxi_rate_mean,choexo.p)
View(choexo.final)
cor(choexo_clean.test$oxi_rate_mean,choexo.p)
cor(choexo_clean.test$oxi_rate_mean,p)
View(p)
Predictors1 = lm(formula = oxi_rate_mean ~ mass + sex + dose_g + dur_exerc + ing_rate + dose_g_kg + pVO2max + DE_kcal + concentration,
data = choexo_clean)
glance(Predictors1) %>%
summary()
tidy(Predictors1)
tidy(Predictors1) %>%
arrange(desc(abs(statistic))) %>%
summary()
#appliquer au test srt
choexo_clean.testing = choexo.recipe %>%
bake(choexo_clean.test)
choexo_clean.split = choexo_clean %>%
rsample::initial_split(prop=0.8)
#creer des data frame avec les donnees du training et du test
choexo_clean.train = choexo_clean.split %>%
training()
choexo_clean.test = choexo_clean.split %>%
testing()
choexo.recipe = choexo_clean.train %>%
recipe(oxi_rate_mean ~ mass + sex + dose_g + dur_exerc + ing_rate + dose_g_kg + pVO2max + DE_kcal + concentration) %>%
step_corr(all_numeric()) %>%
step_knnimpute(all_numeric()) %>%
prep()
choexo.recipe = choexo_clean.train %>%
recipe(oxi_rate_mean ~ mass + sex + dose_g + dur_exerc + ing_rate + dose_g_kg + pVO2max + DE_kcal + concentration) %>%
step_corr(all_numeric()) %>%
step_knnimpute(all_numeric()) %>%
prep()
#extraire avec training set
choexo_clean.training = choexo.recipe %>%
juice()
#Faire une modele lineaire
choexo_clean.lm = linear_reg() %>%
set_engine(engine="lm") %>%
set_mode(mode="regression")
#on met ce modele avec training
choexo_clean.fit = choexo_clean.lm %>%
fit(oxi_rate_mean~.,
data = choexo_clean.training)
tidy(choexo_clean.fit)
#predict avec modele lineaire
choexolm.predict = choexo_clean.fit %>%
predict(choexo_clean.testing) %>%
bind_cols(choexo_clean.testing)
#predict avec modele lineaire
choexolm.predict = choexo_clean.fit %>%
predict(choexo_clean.testing) %>%
bind_cols(choexo_clean.testing)
#on met ce modele avec training
choexo_clean.fit = choexo_clean.lm %>%
fit(oxi_rate_mean~.,
data = choexo_clean.training)
#predict avec modele lineaire
choexolm.predict = choexo_clean.fit %>%
predict(choexo_clean.testing) %>%
bind_cols(choexo_clean.testing)
choexo_cleanlm.stats %>%
ggplot(aes(x=term, y=estimate)) +
geom_point() +
geom_errorbar(aes(ymin = estimate-std.error, ymax=estimate+std.error)) +
scale_y_continuous() +
ggpubr :: theme_pubclean() +
labs(x = "predictors", y="choexo.estimate")
#Evaluer modele lineaire
choexolm.predict %>%
metrics(truth = oxi_rate_mean, estimate =.pred)
#predict avec modele lineaire
choexolm.predict <- choexo_clean.fit %>%
predict(choexo_clean.testing) %>%
bind_cols(choexo_clean.testing)
#appliquer au test set
choexo_clean.testing = choexo.recipe %>%
bake(choexo_clean.test)
#extraire avec training set
choexo_clean.training <- choexo.recipe %>%
juice()
#appliquer au test set
choexo_clean.testing <- choexo.recipe %>%
bake(choexo_clean.test)
choexo.recipe = choexo_clean.train %>%
recipe(oxi_rate_mean ~ mass + sex + dose_g + dur_exerc + ing_rate + dose_g_kg + pVO2max + DE_kcal + concentration) %>%
step_corr(all_numeric()) %>%
step_knnimpute(all_numeric()) %>%
prep()
#extraire avec training set
choexo_clean.training <- choexo.recipe %>%
juice()
#appliquer au test set
choexo_clean.testing <- choexo.recipe %>%
bake(choexo_clean.test)
View(choexo_testing)
View(choexo_clean.test)
install.packages("styler")
library(styler)
styler::
style_file()
style_text()
